#!env python3

from generate import Component, Property, init_method, Method, Return, Param


if __name__ == "__main__":
    w = Component(
        Type="appkit.Menu",
        super_type='foundation.Object',
        description="an object that manages an appâ€™s menus",
        properties=[
            Property(name='menuBarHeight', Type='float64', readonly=True,
                     description='the menu bar height for the main menu in pixels'),
            Property(name='font', Type='appkit.Font', description='the font of the menu and its submenus'),
            Property(name='autoenablesItems', Type='bool', getter_prefix_is=False,
                     description='whether the menu automatically enables and disables its menu items'),
            Property(name='title', Type='string', description='the title of the menu'),
            Property(name='minimumWidth', Type='float64',
                     description='the minimum width of the menu in screen coordinates'),
            Property(name='size', Type='foundation.Size', readonly=True,
                     description='the size of the menu in screen coordinates'),
            Property(name='propertiesToUpdate', Type='uint', go_alias_type='MenuProperties', readonly=True,
                     description='the size of the menu in screen coordinates'),
            Property(name='allowsContextMenuPlugIns', Type='bool', getter_prefix_is=False,
                     description='whether the pop-up menu allows appending of contextual menu plug-in items'),
            Property(name='showsStateColumn', Type='bool', getter_prefix_is=False,
                     description='whether the menu displays the state column'),
            Property(name='highlightedItem', Type='appkit.MenuItem', readonly=True,
                     description='indicates the currently highlighted item in the menu'),
            Property(name='userInterfaceLayoutDirection', Type='int', go_alias_type='UserInterfaceLayoutDirection',
                     description='the layout direction of menu items in the menu'),
            Property(name='numberOfItems', Type='int', readonly=True,
                     description='the number of menu items in the menu, including separator items'),
            Property(name='itemArray', Type='appkit.MenuItem', array=True,
                     description='an array containing the menu items in the menu'),
                     
                     
        ],
        methods=[
            init_method(name="initWithTitle", Type='appkit.Menu', params=[Param(name='title', Type='string')]),
            Method(name='menuBarVisible', static=True, return_value=Return('bool'),
                   description='returns a Boolean value that indicates whether the menu bar is visible.'),
            Method(name='setMenuBarVisible', static=True, params=[
                   Param(name='visible', Type='bool')], description='sets whether the menu bar is visible and selectable by the user'),
            Method(name='insertItem',
                   params=[
                       Param(name='newItem', Type='appkit.MenuItem'),
                       Param(name='index', Type='int', objc_param_name='atIndex'),
                   ],
                   description='inserts a menu item into the menu at a specific location'),
            Method(name='addItem',
                   params=[Param(name='newItem', Type='appkit.MenuItem')],
                   description='adds a menu item to the end of the menu'),
            Method(name='removeItem',
                   params=[Param(name='newItem', Type='appkit.MenuItem')],
                   description='removes a menu item from the menu'),
            Method(name='removeItemAtIndex',
                   params=[Param(name='index', Type='int')],
                   description='removes the menu item at a specified location in the menu'),
            Method(name='removeAllItems',
                   description='removes all the menu items in the menu'),

            Method(name='itemAtIndex', return_value=Return('appkit.MenuItem'),
                   params=[Param(name='index', Type='int')],
                   description='returns the menu item at a specific location of the menu'),
            Method(name='itemWithTitle', return_value=Return('appkit.MenuItem'),
                   params=[Param(name='title', Type='string')],
                   description='returns the first menu item in the menu with a specified title'),
            Method(name='itemWithTag', return_value=Return('appkit.MenuItem'),
                   params=[Param(name='tag', Type='int')],
                   description='returns the first menu item in the menu with the specified tag'),
            Method(name='indexOfItem', return_value=Return('int'),
                   params=[Param(name='item', Type='appkit.MenuItem')],
                   description='returns the index identifying the location of a specified menu item in the menu'),
            Method(name='indexOfItemWithTitle', return_value=Return('int'),
                   params=[Param(name='title', Type='string')],
                   description='returns the index of the first menu item in the menu that has a specified title'),
            Method(name='indexOfItemWithTag', return_value=Return('int'),
                   params=[Param(name='tag', Type='int')],
                   description='returns the index of the first menu item in the menu identified by a tag'),
            Method(name='indexOfItemWithSubmenu', return_value=Return('int'),
                   params=[Param(name='subMenu', Type='appkit.Menu')],
                   description='returns the index of the menu item in the menu with the given submenu'),
            Method(name='setSubmenu', 
                   params=[Param(name='subMenu', Type='appkit.Menu'), Param(name='item', Type='appkit.MenuItem', objc_param_name='forItem')],
                   description='assigns a menu to be a submenu of the menu controlled by a given menu item'),
            Method(name='update', 
                   description='enables or disables the menu items of the menu based on the NSMenuValidation informal protocol and sizes the menu to fit its current menu items if necessary'),
            Method(name='cancelTracking', 
                   description='dismisses the menu and ends all menu tracking'),
            Method(name='cancelTrackingWithoutAnimation', 
                   description='dismisses the menu and ends all menu tracking without displaying the associated animation'),
    

        ],
    )
    w.generate_code()
